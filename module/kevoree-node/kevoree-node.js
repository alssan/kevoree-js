;(function () {
	var Class               = require('pseudoclass'),
        AdaptationEngine    = require('./lib/AdaptationEngine'),
        Log                 = require('log');

    var JavascriptNode = Class({
        toString: 'JavascriptNode',

        construct: function () {
            this.logger = new Log(this.toString());
            this.adaptationEngine = new AdaptationEngine(this);
            this.kCore = null;
        },

        startNode: function () {
            this.logger.debug("Kevoree JavascriptNode started.");
        },

        stopNode: function () {
            this.logger.debug("Kevoree JavascriptNode stopped.");
        },

        updateNode: function () {
            this.logger.debug("Kevoree JavascriptNode updated.");
        },

        setKevoreeCore: function (kCore) {
            this.kCore = kCore;
        },

        getKevoreeCore: function () {
            return this.kCore;
        },

        /**
         * Process traces in order to do the adaptation logic on the current node
         * @param traces diff traces generated by comparing current KevoreeCore model and given model
         * @param model toDeploy model used by KevoreeCore to generate the trace
         * @returns {Array}
         */
        processTraces: function (traces, model) {
            return this.adaptationEngine.processTraces(traces, model);
        }
    });

	module.exports = JavascriptNode;
})();